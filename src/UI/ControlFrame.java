/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import image.processing.Histogram;
import image.processing.ImageProcessor;
import image.processing.ImageStore;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BoundedRangeModel;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JSlider;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.basic.BasicTabbedPaneUI;

/**
 *
 * @author Gayan Sandaruwan
 */
public class ControlFrame extends javax.swing.JFrame {

    /**
     * Creates new form ControlFrame
     */
    private BufferedImage image = null;
    private ImageProcessor imgPro;
    private String zoomAlgoType = "NN";
    private BufferedImage tempImage = null;
    private String lastModification = "";
    private ImageStore imageStore = null;

    public ControlFrame() {

        initComponents();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        imgPro = new ImageProcessor();

        try {
            image = ImageIO.read(new File("C:\\Users\\Gayan Sandaruwan\\Desktop\\Image Processing\\len_top.jpg"));
            imageStore = new ImageStore(image);

            updateLabel(image);
        } catch (IOException ex) {
            Logger.getLogger(ControlFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Init Zoom Algorithm DropDown and Slider
        BoundedRangeModel zRangeModel
                = new DefaultBoundedRangeModel(0, 2, -8, 8);
        ZoomSlide.setModel(zRangeModel);
        ZoomSlide.setMajorTickSpacing(2);
        ZoomSlide.setPaintTicks(true);
        ZoomSlide.setPaintLabels(true);
        zoomSize.setEditable(false);
        zoomSize.setText("0");

        BoundedRangeModel BRangeModel
                = new DefaultBoundedRangeModel(0, 0, -25, 25);
        BrightnessSlide.setModel(BRangeModel);

        BoundedRangeModel CRangeModel
                = new DefaultBoundedRangeModel(0, 0, -25, 25);
        ContrastSlider.setModel(CRangeModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        OrientationTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ZoomSlide = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        zoomSize = new javax.swing.JTextPane();
        ZoomAlgoDrop = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ClockRotButn = new javax.swing.JButton();
        AntiRotButn = new javax.swing.JButton();
        FlipButn = new javax.swing.JButton();
        InfoLabel = new javax.swing.JLabel();
        FilterTab = new javax.swing.JPanel();
        MeanFiltButn = new javax.swing.JButton();
        MedianFiltButn = new javax.swing.JButton();
        GausianFiltButn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SobelButn = new javax.swing.JButton();
        RobertButn = new javax.swing.JButton();
        ColorControlTab = new javax.swing.JPanel();
        ContrastSlider = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        NegotiveButn = new javax.swing.JButton();
        BrightnessSlide = new javax.swing.JSlider();
        grayToggle = new javax.swing.JToggleButton();
        OpenIButn = new javax.swing.JButton();
        SaveButn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ImageLabel = new javax.swing.JLabel();
        ApplyChnagesButn = new javax.swing.JButton();
        ResetButn = new javax.swing.JButton();
        UndoButn = new javax.swing.JButton();
        RedoButn = new javax.swing.JButton();
        HistogramButn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Zoom");

        jLabel2.setText("Rotate");

        ZoomSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ZoomSlideStateChanged(evt);
            }
        });

        jScrollPane1.setViewportView(zoomSize);

        ZoomAlgoDrop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NN", "Bi LI" }));
        ZoomAlgoDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomAlgoDropActionPerformed(evt);
            }
        });

        jLabel3.setText("Algorithm");

        ClockRotButn.setText("Clock Wise");
        ClockRotButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockRotButnActionPerformed(evt);
            }
        });

        AntiRotButn.setText("Anti Clock");
        AntiRotButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AntiRotButnActionPerformed(evt);
            }
        });

        FlipButn.setText("Flip");
        FlipButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlipButnActionPerformed(evt);
            }
        });

        InfoLabel.setText("x 2 ^");

        javax.swing.GroupLayout OrientationTabLayout = new javax.swing.GroupLayout(OrientationTab);
        OrientationTab.setLayout(OrientationTabLayout);
        OrientationTabLayout.setHorizontalGroup(
            OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrientationTabLayout.createSequentialGroup()
                .addGroup(OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ZoomSlide, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addGroup(OrientationTabLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ZoomAlgoDrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(OrientationTabLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OrientationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(FlipButn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AntiRotButn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClockRotButn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OrientationTabLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrientationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        OrientationTabLayout.setVerticalGroup(
            OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrientationTabLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClockRotButn)
                .addGap(22, 22, 22)
                .addComponent(AntiRotButn)
                .addGap(18, 18, 18)
                .addComponent(FlipButn)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ZoomAlgoDrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(ZoomSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OrientationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(InfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("     Orientation Controls  ", OrientationTab);

        MeanFiltButn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MeanFiltButn.setText("Mean Filter");
        MeanFiltButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeanFiltButnActionPerformed(evt);
            }
        });

        MedianFiltButn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MedianFiltButn.setText("Median Filter");
        MedianFiltButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedianFiltButnActionPerformed(evt);
            }
        });

        GausianFiltButn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GausianFiltButn.setText("Gaussian Filter");
        GausianFiltButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GausianFiltButnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Edge Detection");

        SobelButn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SobelButn.setText("Sobel");
        SobelButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SobelButnActionPerformed(evt);
            }
        });

        RobertButn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RobertButn.setText("Robert");
        RobertButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RobertButnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilterTabLayout = new javax.swing.GroupLayout(FilterTab);
        FilterTab.setLayout(FilterTabLayout);
        FilterTabLayout.setHorizontalGroup(
            FilterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FilterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GausianFiltButn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(MedianFiltButn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(MeanFiltButn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SobelButn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RobertButn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FilterTabLayout.setVerticalGroup(
            FilterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterTabLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(MeanFiltButn)
                .addGap(21, 21, 21)
                .addComponent(MedianFiltButn)
                .addGap(18, 18, 18)
                .addComponent(GausianFiltButn)
                .addGap(33, 33, 33)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SobelButn)
                .addGap(18, 18, 18)
                .addComponent(RobertButn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("              Filter Controls", FilterTab);

        ContrastSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ContrastSliderStateChanged(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Contrast");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Gray Scale");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Brightness");

        NegotiveButn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        NegotiveButn.setForeground(new java.awt.Color(51, 51, 51));
        NegotiveButn.setText("Negative");
        NegotiveButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NegotiveButnActionPerformed(evt);
            }
        });

        BrightnessSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BrightnessSlideStateChanged(evt);
            }
        });

        grayToggle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        grayToggle.setText("Gray Scale");
        grayToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ColorControlTabLayout = new javax.swing.GroupLayout(ColorControlTab);
        ColorControlTab.setLayout(ColorControlTabLayout);
        ColorControlTabLayout.setHorizontalGroup(
            ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColorControlTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ColorControlTabLayout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BrightnessSlide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NegotiveButn, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(ColorControlTabLayout.createSequentialGroup()
                        .addGroup(ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ContrastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ColorControlTabLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(grayToggle))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ColorControlTabLayout.setVerticalGroup(
            ColorControlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColorControlTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(grayToggle)
                .addGap(23, 23, 23)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BrightnessSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ContrastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(NegotiveButn)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("              Color Controls", ColorControlTab);

        OpenIButn.setText("Open Image");
        OpenIButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenIButnActionPerformed(evt);
            }
        });

        SaveButn.setText("Save Current");
        SaveButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButnActionPerformed(evt);
            }
        });

        ImageLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane2.setViewportView(ImageLabel);

        ApplyChnagesButn.setText("Apply Changes");
        ApplyChnagesButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyChnagesButnActionPerformed(evt);
            }
        });

        ResetButn.setText("Reset All");
        ResetButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButnActionPerformed(evt);
            }
        });

        UndoButn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/undo.jpg"))); // NOI18N
        UndoButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoButnActionPerformed(evt);
            }
        });

        RedoButn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/redo.jpg"))); // NOI18N
        RedoButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedoButnActionPerformed(evt);
            }
        });

        HistogramButn.setText("Histogram");
        HistogramButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistogramButnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(OpenIButn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveButn)
                .addGap(18, 18, 18)
                .addComponent(ApplyChnagesButn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ResetButn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UndoButn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RedoButn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(HistogramButn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1132, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveButn)
                            .addComponent(ApplyChnagesButn)
                            .addComponent(ResetButn)
                            .addComponent(UndoButn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(RedoButn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(OpenIButn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(HistogramButn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MedianFiltButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedianFiltButnActionPerformed
        if (tempImage == null || !lastModification.equalsIgnoreCase("MEDIAN")) {
            tempImage = image;
        }
        tempImage = imgPro.medianFilter(tempImage);
        updateLabel(tempImage);
        lastModification = "MEDIAN";
    }//GEN-LAST:event_MedianFiltButnActionPerformed

    private void OpenIButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenIButnActionPerformed

        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);
        // int returnValue = jfc.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());

            try {
                image = ImageIO.read(new File(selectedFile.getAbsolutePath()));
//                    ImageProcessor.setBufImg(picture);
                this.updateLabel(image);
                imageStore = new ImageStore(image);

            } catch (IOException e) {
                String workingDir = System.getProperty("user.dir");
                System.out.println("Current working directory : " + workingDir);
                e.printStackTrace();
            } catch (NullPointerException e) {
                System.out.println("Image Is not a recommended Type");
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_OpenIButnActionPerformed

    private void ClockRotButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockRotButnActionPerformed

        this.image = imgPro.rotateClock(image);

        this.updateLabel(image);

    }//GEN-LAST:event_ClockRotButnActionPerformed

    private void AntiRotButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AntiRotButnActionPerformed
        this.image = imgPro.rotateAntiClock(image);

        this.updateLabel(image);
    }//GEN-LAST:event_AntiRotButnActionPerformed

    private void FlipButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlipButnActionPerformed

        this.image = imgPro.flipImage(image);

        updateLabel(image);
    }//GEN-LAST:event_FlipButnActionPerformed

    private void ZoomAlgoDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomAlgoDropActionPerformed

        if (ZoomAlgoDrop.getSelectedItem().equals("NN")) {

            BoundedRangeModel bRangeModel
                    = new DefaultBoundedRangeModel(0, 2, -8, 8);
            ZoomSlide.setModel(bRangeModel);
            ZoomSlide.setMajorTickSpacing(2);
            ZoomSlide.setPaintTicks(true);
            ZoomSlide.setPaintLabels(true);
            zoomSize.setEditable(false);
            zoomSize.setText("0");
            InfoLabel.setText("x 2 ^");
            zoomAlgoType = "NN";

        } else {
            BoundedRangeModel bRangeModel
                    = new DefaultBoundedRangeModel(0, 0, -100, 100);
            ZoomSlide.setModel(bRangeModel);
            ZoomSlide.setPaintTicks(false);
            ZoomSlide.setPaintLabels(false);
            zoomSize.setEditable(false);
            zoomSize.setText("0");
            InfoLabel.setText("x ");

            zoomAlgoType = (String) ZoomAlgoDrop.getSelectedItem();
        }


    }//GEN-LAST:event_ZoomAlgoDropActionPerformed

    private void ZoomSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ZoomSlideStateChanged

        BufferedImage bufImg = null;
        int slideValue = ZoomSlide.getValue();
        if (slideValue > 0) {
            System.out.println("Entering Carrot");
            if (zoomAlgoType.equals("NN")) {
                bufImg = imgPro.zoomInNN(slideValue, image);
            } else {
                bufImg = imgPro.zoomBiLinear(ZoomSlide.getValue(), image);
            }

        } else if (slideValue < 0) {
            if (zoomAlgoType.equals("NN")) {
                bufImg = imgPro.zoomOutNN(slideValue, image);
            } else {
                bufImg = imgPro.zoomOutBiLinear(ZoomSlide.getValue(), image);
            }
        } else {
            bufImg = image;
        }
        zoomSize.setText("" + slideValue);
        updateLabel(bufImg);
        tempImage = bufImg;
    }//GEN-LAST:event_ZoomSlideStateChanged

    private void NegotiveButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NegotiveButnActionPerformed
        if (tempImage == null || !lastModification.equalsIgnoreCase("NEGOTIVE")) {
            tempImage = image;
        }

        tempImage = imgPro.negotiveImg(tempImage);

        updateLabel(tempImage);
        lastModification = "NEGOTIVE";
    }//GEN-LAST:event_NegotiveButnActionPerformed

    private void grayToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayToggleActionPerformed
        BufferedImage bufImg = null;

        if (grayToggle.isSelected()) {
            System.out.println("Converting To Gray Scale");
            bufImg = imgPro.toGrayScale(image);

        } else if (!grayToggle.isSelected()) {

            bufImg = image;
        }
        updateLabel(bufImg);
        tempImage = bufImg;

    }//GEN-LAST:event_grayToggleActionPerformed

    private void BrightnessSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BrightnessSlideStateChanged
        BufferedImage bufImg = null;
        int slideValue = BrightnessSlide.getValue();
        if (slideValue > 0) {
            System.out.println("Increasing Brightness... ");

            bufImg = imgPro.brightnessInc(slideValue, image);

        } else if (slideValue < 0) {
            System.out.println("Decreasing Brightness ...." + slideValue);

            bufImg = imgPro.brightnessDec(slideValue, image);

        } else {
            bufImg = image;
        }
        zoomSize.setText("" + slideValue);
        updateLabel(bufImg);
        tempImage = bufImg;
    }//GEN-LAST:event_BrightnessSlideStateChanged

    private void ContrastSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ContrastSliderStateChanged

        BufferedImage bufImg = null;
        int slideValue = ContrastSlider.getValue();
        if (slideValue > 0) {
            System.out.println("Increasing Contrast... ");

            bufImg = imgPro.contrastInc(slideValue, image);

        } else if (slideValue < 0) {
            System.out.println("Decreasing Contrast ...." + slideValue);

            bufImg = imgPro.contrastDec(slideValue, image);

        } else {
            bufImg = image;
        }
        zoomSize.setText("" + slideValue);
        updateLabel(bufImg);
        tempImage = bufImg;

    }//GEN-LAST:event_ContrastSliderStateChanged

    private void ApplyChnagesButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyChnagesButnActionPerformed

        image = tempImage;
        imageStore.addImage(image);
    }//GEN-LAST:event_ApplyChnagesButnActionPerformed

    private void MeanFiltButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeanFiltButnActionPerformed

        if (tempImage == null || !lastModification.equalsIgnoreCase("MEAN")) {
            tempImage = image;
        }
        tempImage = imgPro.MeanFilter(tempImage);

        updateLabel(tempImage);
        lastModification = "MEAN";


    }//GEN-LAST:event_MeanFiltButnActionPerformed

    private void GausianFiltButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GausianFiltButnActionPerformed
        if (tempImage == null || !lastModification.equalsIgnoreCase("GAUS")) {
            tempImage = image;
        }
        tempImage = imgPro.GaussianFilter(tempImage);
        updateLabel(tempImage);
        lastModification = "GAUS";


    }//GEN-LAST:event_GausianFiltButnActionPerformed

    private void SobelButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SobelButnActionPerformed
        if (tempImage == null || !lastModification.equalsIgnoreCase("SOBEL")) {
            tempImage = image;
        }
        tempImage = imgPro.sobelFilter(tempImage);
        updateLabel(tempImage);
        lastModification = "SOBEL";

    }//GEN-LAST:event_SobelButnActionPerformed

    private void RobertButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RobertButnActionPerformed

        if (tempImage == null || !lastModification.equalsIgnoreCase("ROBERT")) {
            tempImage = image;
        }

        tempImage = imgPro.robertFilter(tempImage);
        updateLabel(tempImage);
        lastModification = "ROBERT";
    }//GEN-LAST:event_RobertButnActionPerformed

    private void UndoButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoButnActionPerformed

        image = imageStore.getImageUndo();
        updateLabel(image);

    }//GEN-LAST:event_UndoButnActionPerformed

    private void RedoButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedoButnActionPerformed
        image = imageStore.getImageRedo();
        updateLabel(image);

    }//GEN-LAST:event_RedoButnActionPerformed

    private void ResetButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButnActionPerformed

        image = imageStore.getInitialImage();
        updateLabel(image);
    }//GEN-LAST:event_ResetButnActionPerformed

    private void SaveButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                ImageIO.write(image, "JPEG", new File(fileChooser
                        .getSelectedFile().getAbsolutePath() + ".JPEG"));

            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_SaveButnActionPerformed

    private void HistogramButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistogramButnActionPerformed

        if(tempImage == null){
            tempImage = image;
        }
        Histogram histogram = new Histogram(tempImage);
        histogram.drawHistogram();
        System.out.println("Histogram Drawn..");
    }//GEN-LAST:event_HistogramButnActionPerformed

    private void updateLabel(BufferedImage bufImage) {

        ImageLabel.setIcon(new ImageIcon(bufImage));

        System.out.println("Icon Set");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AntiRotButn;
    private javax.swing.JButton ApplyChnagesButn;
    private javax.swing.JSlider BrightnessSlide;
    private javax.swing.JButton ClockRotButn;
    private javax.swing.JPanel ColorControlTab;
    private javax.swing.JSlider ContrastSlider;
    private javax.swing.JPanel FilterTab;
    private javax.swing.JButton FlipButn;
    private javax.swing.JButton GausianFiltButn;
    private javax.swing.JButton HistogramButn;
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JLabel InfoLabel;
    private javax.swing.JButton MeanFiltButn;
    private javax.swing.JButton MedianFiltButn;
    private javax.swing.JButton NegotiveButn;
    private javax.swing.JButton OpenIButn;
    private javax.swing.JPanel OrientationTab;
    private javax.swing.JButton RedoButn;
    private javax.swing.JButton ResetButn;
    private javax.swing.JButton RobertButn;
    private javax.swing.JButton SaveButn;
    private javax.swing.JButton SobelButn;
    private javax.swing.JButton UndoButn;
    private javax.swing.JComboBox<String> ZoomAlgoDrop;
    private javax.swing.JSlider ZoomSlide;
    private javax.swing.JToggleButton grayToggle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextPane zoomSize;
    // End of variables declaration//GEN-END:variables
}
